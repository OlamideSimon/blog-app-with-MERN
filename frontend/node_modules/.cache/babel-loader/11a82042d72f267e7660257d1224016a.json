{"ast":null,"code":"var _jsxFileName = \"/home/young-alpha/Documents/GitHub/saadatu-backend/frontend/src/pages/Deck.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { motion, useMotionValue, useTransform, useAnimation } from 'framer-motion';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Deck = _ref => {\n  _s();\n\n  let {\n    img,\n    title\n  } = _ref;\n  const motionValue = useMotionValue(0);\n  const rotateValue = useTransform(motionValue, [-200, 200], [-50, 50]);\n  const opacityValue = useTransform(motionValue, [-200, -150, 0, 150, 200], [0, 1, 1, 1, 0]);\n  const animControls = useAnimation();\n  console.log(motionValue, rotateValue, opacityValue, animControls);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    drag: \"x\",\n    style: {\n      x: motionValue,\n      rotate: rotateValue,\n      opacity: opacityValue\n    },\n    dragConstraints: {\n      left: -100,\n      right: 100\n    },\n    onDragEnd: (event, info) => {\n      if (Math.abs(info.point.x) >= 50) {\n        animControls.start({\n          x: 0\n        });\n      } else {\n        animControls.start({\n          x: info.point.x < 0 ? -200 : 10\n        });\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Deck, \"yBLuBj5FPv+oJ2N4koJ8/Mt/Ecs=\", false, function () {\n  return [useMotionValue, useTransform, useTransform, useAnimation];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/home/young-alpha/Documents/GitHub/saadatu-backend/frontend/src/pages/Deck.tsx"],"names":["React","motion","useMotionValue","useTransform","useAnimation","Card","Deck","img","title","motionValue","rotateValue","opacityValue","animControls","console","log","x","rotate","opacity","left","right","event","info","Math","abs","point","start"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,YAAjC,EAA+CC,YAA/C,QAAmE,eAAnE;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAOA,MAAMC,IAA6B,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAgC;AACrE,QAAMC,WAAgB,GAAGP,cAAc,CAAC,CAAD,CAAvC;AACA,QAAMQ,WAAgB,GAAGP,YAAY,CAACM,WAAD,EAAc,CAAC,CAAC,GAAF,EAAO,GAAP,CAAd,EAA2B,CAAC,CAAC,EAAF,EAAM,EAAN,CAA3B,CAArC;AACA,QAAME,YAAiB,GAAGR,YAAY,CAACM,WAAD,EAAc,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,EAAa,CAAb,EAAgB,GAAhB,EAAqB,GAArB,CAAd,EAAyC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAzC,CAAtC;AACA,QAAMG,YAAY,GAAGR,YAAY,EAAjC;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ,EAAyBC,WAAzB,EAAsCC,YAAtC,EAAoDC,YAApD;AAEA,sBACE,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,KAAK,EAAE;AAACG,MAAAA,CAAC,EAAEN,WAAJ;AAAiBO,MAAAA,MAAM,EAAEN,WAAzB;AAAsCO,MAAAA,OAAO,EAAEN;AAA/C,KAFT;AAGE,IAAA,eAAe,EAAE;AAAEO,MAAAA,IAAI,EAAE,CAAC,GAAT;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAHnB;AAIE,IAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC1B,UAAGC,IAAI,CAACC,GAAL,CAASF,IAAI,CAACG,KAAL,CAAWT,CAApB,KAA0B,EAA7B,EAAiC;AAC/BH,QAAAA,YAAY,CAACa,KAAb,CAAmB;AAACV,UAAAA,CAAC,EAAE;AAAJ,SAAnB;AACD,OAFD,MAEO;AACLH,QAAAA,YAAY,CAACa,KAAb,CAAmB;AAACV,UAAAA,CAAC,EAAEM,IAAI,CAACG,KAAL,CAAWT,CAAX,GAAe,CAAf,GAAmB,CAAC,GAApB,GAAyB;AAA7B,SAAnB;AACD;AACF,KAVH;AAAA,2BAYE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxBD;;GAAMT,I;UACqBJ,c,EACAC,Y,EACCA,Y,EACLC,Y;;;KAJjBE,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { motion, useMotionValue, useTransform, useAnimation } from 'framer-motion'\nimport Card from '../components/Card'\n\ninterface DeckInterface {\n  img: string,\n  title: string\n}\n\nconst Deck: React.FC<DeckInterface> = ({img, title}: DeckInterface) => {\n  const motionValue: any = useMotionValue(0);\n  const rotateValue: any = useTransform(motionValue, [-200, 200], [-50, 50])\n  const opacityValue: any = useTransform(motionValue, [-200, -150, 0, 150, 200], [0, 1, 1, 1, 0]);\n  const animControls = useAnimation()\n\n  console.log(motionValue, rotateValue, opacityValue, animControls)\n  \n  return (\n    <motion.div\n      drag='x'\n      style={{x: motionValue ,rotate: rotateValue, opacity: opacityValue}}\n      dragConstraints={{ left: -100, right: 100}}\n      onDragEnd={(event, info) => {\n        if(Math.abs(info.point.x) >= 50) {\n          animControls.start({x: 0});\n        } else {\n          animControls.start({x: info.point.x < 0 ? -200: 10})\n        }\n      }}\n    >\n      <Card />\n    </motion.div>\n  )\n}\n\nexport default Deck"]},"metadata":{},"sourceType":"module"}