{"ast":null,"code":"var _jsxFileName = \"/home/young-alpha/Documents/GitHub/saadatu-backend/frontend/src/components/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { motion, useMotionValue, useTransform, useAnimation } from 'framer-motion';\nimport { useAppDispatch } from '../app/hooks';\nimport { useNavigate } from 'react-router-dom';\nimport { selectBlog } from '../features/blogs/selectedBlogSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  _s();\n\n  let {\n    _id,\n    body,\n    description,\n    title,\n    user,\n    img\n  } = _ref;\n  const motionValue = useMotionValue(0);\n  const rotateValue = useTransform(motionValue, [-200, 200], [-50, 50]);\n  const opacityValue = useTransform(motionValue, [-200, -150, 0, 150, 200], [0, 1, 1, 1, 0]);\n  const animControls = useAnimation();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const selected = () => {\n    dispatch(selectBlog({\n      _id,\n      body,\n      description,\n      title,\n      user\n    }));\n    navigate(`${_id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    drag: \"x\",\n    style: {\n      x: motionValue,\n      rotate: rotateValue,\n      opacity: opacityValue\n    },\n    dragConstraints: {\n      left: -1000,\n      right: 1000\n    },\n    onDragEnd: (event, info) => {\n      if (Math.abs(info.point.x) <= 300) {\n        animControls.start({\n          x: 100\n        });\n      } else {\n        animControls.start({\n          x: info.point.x < 0 ? -200 : 200\n        });\n      }\n    },\n    className: \"absolute top-8 -left-2 cursor-pointer w-64 h-1\",\n    onClick: selected,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-slate-300 rounded-lg shadow-slate-800 shadow-md border-2 border-[#b6fff4]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" rounded-b-lg p-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"7wkS0HDyMYp7KbtxSIhkx+/VqiM=\", false, function () {\n  return [useMotionValue, useTransform, useTransform, useAnimation, useAppDispatch, useNavigate];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/young-alpha/Documents/GitHub/saadatu-backend/frontend/src/components/Card.tsx"],"names":["React","motion","useMotionValue","useTransform","useAnimation","useAppDispatch","useNavigate","selectBlog","Card","_id","body","description","title","user","img","motionValue","rotateValue","opacityValue","animControls","dispatch","navigate","selected","x","rotate","opacity","left","right","event","info","Math","abs","point","start"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,YAAjC,EAA+CC,YAA/C,QAAmE,eAAnE;AAGA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,qCAA3B;;;AAEA,MAAMC,IAA6B,GAAG,QAAgD;AAAA;;AAAA,MAA/C;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA,IAAhC;AAAsCC,IAAAA;AAAtC,GAA+C;AACpF,QAAMC,WAAgB,GAAGb,cAAc,CAAC,CAAD,CAAvC;AACA,QAAMc,WAAgB,GAAGb,YAAY,CAACY,WAAD,EAAc,CAAC,CAAC,GAAF,EAAO,GAAP,CAAd,EAA2B,CAAC,CAAC,EAAF,EAAM,EAAN,CAA3B,CAArC;AACA,QAAME,YAAiB,GAAGd,YAAY,CAACY,WAAD,EAAc,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,EAAa,CAAb,EAAgB,GAAhB,EAAqB,GAArB,CAAd,EAAyC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAzC,CAAtC;AACA,QAAMG,YAAY,GAAGd,YAAY,EAAjC;AACA,QAAMe,QAAQ,GAAGd,cAAc,EAA/B;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;;AAGA,QAAMe,QAAQ,GAAG,MAAM;AACrBF,IAAAA,QAAQ,CAACZ,UAAU,CAAC;AAClBE,MAAAA,GADkB;AAElBC,MAAAA,IAFkB;AAGlBC,MAAAA,WAHkB;AAIlBC,MAAAA,KAJkB;AAKlBC,MAAAA;AALkB,KAAD,CAAX,CAAR;AAQAO,IAAAA,QAAQ,CAAE,GAAEX,GAAI,EAAR,CAAR;AACD,GAVD;;AAaA,sBACE,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,KAAK,EAAE;AAACa,MAAAA,CAAC,EAAEP,WAAJ;AAAiBQ,MAAAA,MAAM,EAAEP,WAAzB;AAAsCQ,MAAAA,OAAO,EAAEP;AAA/C,KAFT;AAGE,IAAA,eAAe,EAAE;AAAEQ,MAAAA,IAAI,EAAE,CAAC,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAHnB;AAIE,IAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC1B,UAAGC,IAAI,CAACC,GAAL,CAASF,IAAI,CAACG,KAAL,CAAWT,CAApB,KAA0B,GAA7B,EAAkC;AAChCJ,QAAAA,YAAY,CAACc,KAAb,CAAmB;AAACV,UAAAA,CAAC,EAAE;AAAJ,SAAnB;AACD,OAFD,MAEO;AACLJ,QAAAA,YAAY,CAACc,KAAb,CAAmB;AAACV,UAAAA,CAAC,EAAEM,IAAI,CAACG,KAAL,CAAWT,CAAX,GAAe,CAAf,GAAmB,CAAC,GAApB,GAAyB;AAA7B,SAAnB;AACD;AACF,KAVH;AAWE,IAAA,SAAS,EAAC,gDAXZ;AAYE,IAAA,OAAO,EAAED,QAZX;AAAA,2BAcE;AAAK,MAAA,SAAS,EAAC,8EAAf;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE;AAAA,oBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7CD;;GAAMJ,I;UACqBN,c,EACAC,Y,EACCA,Y,EACLC,Y,EACJC,c,EACAC,W;;;KANbE,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { motion, useMotionValue, useTransform, useAnimation } from 'framer-motion'\nimport { DeckInterface } from '../utils/interface';\nimport image from '../imgs/download.jpeg'\nimport { useAppDispatch } from '../app/hooks';\nimport { useNavigate } from 'react-router-dom';\nimport { selectBlog } from '../features/blogs/selectedBlogSlice'\n\nconst Card: React.FC<DeckInterface> = ({_id, body, description, title, user, img}) => {\n  const motionValue: any = useMotionValue(0);\n  const rotateValue: any = useTransform(motionValue, [-200, 200], [-50, 50])\n  const opacityValue: any = useTransform(motionValue, [-200, -150, 0, 150, 200], [0, 1, 1, 1, 0]);\n  const animControls = useAnimation()\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n\n\n  const selected = () => {\n    dispatch(selectBlog({\n      _id,\n      body,\n      description,\n      title,\n      user\n    }))\n\n    navigate(`${_id}`)\n  }\n\n  \n  return (\n    <motion.div\n      drag='x'\n      style={{x: motionValue ,rotate: rotateValue, opacity: opacityValue}}\n      dragConstraints={{ left: -1000, right: 1000}}\n      onDragEnd={(event, info) => {\n        if(Math.abs(info.point.x) <= 300) {\n          animControls.start({x: 100});\n        } else {\n          animControls.start({x: info.point.x < 0 ? -200: 200})\n        }\n      }}\n      className='absolute top-8 -left-2 cursor-pointer w-64 h-1'\n      onClick={selected}\n    >\n      <div className='bg-slate-300 rounded-lg shadow-slate-800 shadow-md border-2 border-[#b6fff4]'>\n        {/* <img draggable='false' alt='' src={image} className='rounded-t-lg w-full h-48' /> */}\n        <div className=' rounded-b-lg p-5'>\n          <h1>{title}</h1>\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n\nexport default Card"]},"metadata":{},"sourceType":"module"}