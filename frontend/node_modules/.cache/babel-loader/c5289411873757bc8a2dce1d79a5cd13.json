{"ast":null,"code":"var _jsxFileName = \"/home/young-alpha/Documents/GitHub/saadatu-backend/frontend/src/components/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = () => {\n  _s();\n\n  const motionValue = useMotionValue(0);\n  const rotateValue = useTransform(motionValue, [-200, 200], [-50, 50]);\n  const opacityValue = useTransform(motionValue, [-200, -150, 0, 150, 200], [0, 1, 1, 1, 0]);\n  const animControls = useAnimation();\n  console.log(motionValue, rotateValue, opacityValue, animControls);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    drag: \"x\",\n    style: {\n      x: motionValue,\n      rotate: rotateValue,\n      opacity: opacityValue\n    },\n    dragConstraints: {\n      left: -100,\n      right: 100\n    },\n    onDragEnd: (event, info) => {\n      if (Math.abs(info.point.x) >= 50) {\n        animControls.start({\n          x: 0\n        });\n      } else {\n        animControls.start({\n          x: info.point.x < 0 ? -200 : 200\n        });\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"yBLuBj5FPv+oJ2N4koJ8/Mt/Ecs=\", true);\n\n_c = Card;\nexport default Card; // <div className='bg-slate-300 p-5 rounded-lg shadow-slate-800 shadow-md'>\n//   <div className=' rounded-t-lg '>\n//     <h1>Title</h1>\n//   </div>\n//   <div className='rounded-b-lg'>\n//     <img alt='' src='' />\n//   </div>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/young-alpha/Documents/GitHub/saadatu-backend/frontend/src/components/Card.tsx"],"names":["React","Card","motionValue","useMotionValue","rotateValue","useTransform","opacityValue","animControls","useAnimation","console","log","x","rotate","opacity","left","right","event","info","Math","abs","point","start"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,WAAgB,GAAGC,cAAc,CAAC,CAAD,CAAvC;AACA,QAAMC,WAAgB,GAAGC,YAAY,CAACH,WAAD,EAAc,CAAC,CAAC,GAAF,EAAO,GAAP,CAAd,EAA2B,CAAC,CAAC,EAAF,EAAM,EAAN,CAA3B,CAArC;AACA,QAAMI,YAAiB,GAAGD,YAAY,CAACH,WAAD,EAAc,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,EAAa,CAAb,EAAgB,GAAhB,EAAqB,GAArB,CAAd,EAAyC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAzC,CAAtC;AACA,QAAMK,YAAY,GAAGC,YAAY,EAAjC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ,EAAyBE,WAAzB,EAAsCE,YAAtC,EAAoDC,YAApD;AAEA,sBACE,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,KAAK,EAAE;AAACI,MAAAA,CAAC,EAAET,WAAJ;AAAiBU,MAAAA,MAAM,EAAER,WAAzB;AAAsCS,MAAAA,OAAO,EAAEP;AAA/C,KAFT;AAGE,IAAA,eAAe,EAAE;AAAEQ,MAAAA,IAAI,EAAE,CAAC,GAAT;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAHnB;AAIE,IAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC1B,UAAGC,IAAI,CAACC,GAAL,CAASF,IAAI,CAACG,KAAL,CAAWT,CAApB,KAA0B,EAA7B,EAAiC;AAC/BJ,QAAAA,YAAY,CAACc,KAAb,CAAmB;AAACV,UAAAA,CAAC,EAAE;AAAJ,SAAnB;AACD,OAFD,MAEO;AACLJ,QAAAA,YAAY,CAACc,KAAb,CAAmB;AAACV,UAAAA,CAAC,EAAEM,IAAI,CAACG,KAAL,CAAWT,CAAX,GAAe,CAAf,GAAmB,CAAC,GAApB,GAAyB;AAA7B,SAAnB;AACD;AACF,KAVH;AAAA,2BAYE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxBD;;GAAMV,I;;KAAAA,I;AA0BN,eAAeA,IAAf,C,CACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\n\nconst Card = () => {\n  const motionValue: any = useMotionValue(0);\n  const rotateValue: any = useTransform(motionValue, [-200, 200], [-50, 50])\n  const opacityValue: any = useTransform(motionValue, [-200, -150, 0, 150, 200], [0, 1, 1, 1, 0]);\n  const animControls = useAnimation()\n\n  console.log(motionValue, rotateValue, opacityValue, animControls)\n  \n  return (\n    <motion.div\n      drag='x'\n      style={{x: motionValue ,rotate: rotateValue, opacity: opacityValue}}\n      dragConstraints={{ left: -100, right: 100}}\n      onDragEnd={(event, info) => {\n        if(Math.abs(info.point.x) >= 50) {\n          animControls.start({x: 0});\n        } else {\n          animControls.start({x: info.point.x < 0 ? -200: 200})\n        }\n      }}\n    >\n      <Card />\n    </motion.div>\n  )\n}\n\nexport default Card\n    // <div className='bg-slate-300 p-5 rounded-lg shadow-slate-800 shadow-md'>\n    //   <div className=' rounded-t-lg '>\n    //     <h1>Title</h1>\n    //   </div>\n    //   <div className='rounded-b-lg'>\n    //     <img alt='' src='' />\n    //   </div>\n    // </div>"]},"metadata":{},"sourceType":"module"}