{"ast":null,"code":"import { useRoutePreloader, useRouter } from \"../../router/index.js\";\nimport { motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { useRef } from \"react\";\nimport { fontStore, LoadFontResult } from \"../fonts/fontStore.js\";\nimport { Animatable } from \"../../animation/Animatable/Animatable.js\";\nimport { cx } from \"../../modules/cx.js\";\nimport { parseFramerPageLink, PathVariablesContext, replaceFramerPageLinks, useLinkMatchesRoute } from \"../../modules/framerPageLink.js\";\nimport { useIsOnFramerCanvas } from \"../../modules/useIsOnFramerCanvas.js\";\nimport { collectTextShadowsForProps } from \"../style/shadow.js\";\nimport { calculateRect, ParentSizeState, useParentSize } from \"../types/NewConstraints.js\";\nimport { RenderTarget } from \"../types/RenderEnvironment.js\";\nimport { collectFiltersFromProps } from \"../utils/filtersForNode.js\";\nimport { injectComponentCSSRules } from \"../utils/injectComponentCSSRules.js\";\nimport { forceLayerBackingWithCSSProperties } from \"../utils/setLayerBacked.js\";\nimport { transformTemplate } from \"../utils/transformTemplate.js\";\nimport { useLayoutId } from \"../utils/useLayoutId.js\";\nimport { measureClosestComponentContainer, useMeasureLayout } from \"../utils/useMeasureLayout.js\";\nimport { isShallowEqualArray } from \"../utils/isShallowEqualArray.js\";\nimport { ComponentContainerContext } from \"./ComponentContainerContext.js\";\nimport { findAnchorElementWithin } from \"./Text.js\";\n/** Used to map characters to HTML entities. */\n\nconst htmlEscapes = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\"\n};\n/** Used to match HTML entities and HTML characters. */\n\nconst reUnescapedHtml = /[&<>\"']/g;\nconst reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n/**\n * Escape function, taken from Lodash\n * @see https://github.com/lodash/lodash/blob/e0029485ab4d97adea0cb34292afb6700309cf16/escape.js#L41\n * */\n\nfunction escapeHTML(str) {\n  return str && reHasUnescapedHtml.test(str) ? str.replace(reUnescapedHtml, chr => htmlEscapes[chr]) : str || \"\";\n}\n/**\n * @internal\n * Don't change this value as it's used in generated components as well.\n */\n\n\nexport const richTextPlaceholder = \"{{ text-placeholder }}\";\n/**\n * @internal\n */\n\nexport const RichText = React.forwardRef(function Text(props, forwardedRef) {\n  const {\n    id,\n    name,\n    html,\n    htmlFromDesign,\n    text,\n    textFromDesign,\n    fonts = [],\n    width,\n    height,\n    left,\n    right,\n    top,\n    bottom,\n    center,\n    className,\n    visible = true,\n    opacity,\n    rotation = 0,\n    verticalAlignment = \"top\",\n    isEditable = false,\n    willChangeTransform,\n    environment = RenderTarget.current,\n    withExternalLayout = false,\n    positionSticky,\n    positionStickyTop,\n    positionStickyRight,\n    positionStickyBottom,\n    positionStickyLeft,\n    __htmlStructure,\n    __fromCanvasComponent,\n    _forwardedOverrideId,\n    _forwardedOverrides,\n    _usesDOMRect,\n    ...rest\n  } = props;\n  const parentSize = useParentSize();\n  const layoutId = useLayoutId(props);\n  const fallbackLayoutRef = useRef(null);\n  const layoutRef = forwardedRef ?? fallbackLayoutRef;\n  const {\n    navigate,\n    getRoute,\n    currentRouteId\n  } = useRouter();\n  useRoutePreloader(props.preload ?? []);\n  useMeasureLayout(props, layoutRef);\n  const inCodeComponent = React.useContext(ComponentContainerContext);\n  const matchesCurrentRoute = useLinkMatchesRoute(props.__link);\n  const isOnCanvas = useIsOnFramerCanvas(); // Replace HTML with text override or variable\n\n  let textOrOverride = text;\n  const forwardedOverrideId = _forwardedOverrideId ?? id;\n\n  if (forwardedOverrideId && _forwardedOverrides) {\n    const override = _forwardedOverrides[forwardedOverrideId];\n\n    if (typeof override === \"string\") {\n      textOrOverride = override;\n    }\n  } // The __htmlStructure placeholder is inserted in:\n  // - collectVariantDefinitionForNode.ts\n  // - RichTextNode.getProps\n  // - RichTextNode.getAttributes\n\n\n  let innerHTML = \"\";\n\n  if (textOrOverride) {\n    const escapedText = escapeHTML(textOrOverride);\n    innerHTML = __htmlStructure ? __htmlStructure.replace(richTextPlaceholder, escapedText) : `<p>${escapedText}</p>`;\n  } else if (html) {\n    innerHTML = html;\n  } else if (textFromDesign) {\n    const escapedText = escapeHTML(textFromDesign);\n    innerHTML = __htmlStructure ? __htmlStructure.replace(richTextPlaceholder, escapedText) : `<p>${escapedText}</p>`;\n  } else if (htmlFromDesign) {\n    innerHTML = htmlFromDesign;\n  } // Parse the ProseMirror HTML to replace framer page links in the `data:framer/page-link,`\n  // format with the correct paths their target corresponds to.\n  // This needs to happen whenever the HTML string changes, since smart\n  // components can update the ProseMirror HTML in variants by updating this prop value.\n\n\n  const pathVariables = React.useContext(PathVariablesContext);\n  innerHTML = React.useMemo(() => {\n    if (isOnCanvas || !getRoute || !currentRouteId) return innerHTML;\n    return replaceFramerPageLinks(innerHTML, getRoute, currentRouteId, pathVariables);\n  }, [innerHTML, getRoute, isOnCanvas, currentRouteId, pathVariables]);\n  React.useEffect(() => {\n    const container = layoutRef.current;\n    if (container === null) return;\n\n    function interceptPageLinks(event) {\n      const anchorElement = findAnchorElementWithin(event.target, layoutRef); // Don't prevent cmd + click, allowing users to open in new tab.\n\n      if (event.metaKey || !navigate || !anchorElement) return; // Page links written to the ProseMirror HTML in the `data:framer/page-link,`\n      // format should have been parsed, and replaced with the correct paths.\n      // If that has happened, we can access the route id and transition properties\n      // as data attributes, finally performing a navigation.\n\n      const pageLink = anchorElement.getAttribute(\"data-framer-page-link-target\"\n      /* Page */\n      );\n\n      if (pageLink) {\n        event.preventDefault();\n        const elementId = anchorElement.getAttribute(\"data-framer-page-link-element\"\n        /* Element */\n        ) ?? undefined;\n        return navigate(pageLink, elementId, pathVariables);\n      } // If for some reason the page links in the ProseMirror HTML have not been\n      // parsed, try to still perform a navigation by parsing the page\n      // link in the href.\n\n\n      const href = anchorElement.getAttribute(\"href\");\n\n      if (href) {\n        const link = parseFramerPageLink(href);\n        if (!link || !link.target) return;\n        event.preventDefault();\n        return navigate(link.target, link.element ?? undefined, pathVariables);\n      }\n    }\n\n    container.addEventListener(\"click\", interceptPageLinks);\n    return () => {\n      container.removeEventListener(\"click\", interceptPageLinks);\n    };\n  }, [navigate, pathVariables]); // The fonts array is typically regenerated for every change to a text node,\n  // so we need to keep track of previous values to avoid calls to the font\n  // store when the contents of the array are the same between renders\n\n  const prevFontsRef = useRef([]);\n\n  if (!isShallowEqualArray(prevFontsRef.current, fonts)) {\n    prevFontsRef.current = fonts;\n    fontStore.loadWebFontsFromSelectors(fonts).then(results => {\n      // After fonts load, layout is likely to shift in auto-sized\n      // elements. Since measurements would have typically already been\n      // taken at this point, this can lead to selection outlines\n      // appearing out of sync with the rendered component. On the canvas\n      // we hook into the font loading process and manually trigger a\n      // re-render for the node when it completes, which in turn makes\n      // sure that all layout measurements take the latest layout shifts\n      // into account. In compiled smart components, however, we can't use\n      // the same solution. We'll instead check if new fonts have been\n      // loaded, and attempt to add a measure request for the closest\n      // component container, which in the case of component instances is\n      // the only node whose measurements need updating (we don't track\n      // measurements for things rendered inside the component itself,\n      // which could also be affected by layout shifts).\n      // If we're not running on the canvas and from within a smart\n      // component, there's no need to measure.\n      if (!__fromCanvasComponent || !layoutRef.current || RenderTarget.current() !== RenderTarget.canvas) return; // We only need to measure if at least one new font has been loaded.\n      // Otherwise we assume there was no layout shift.\n\n      const didLoadNewFonts = results.some(result => result.status === \"fulfilled\" && result.value === LoadFontResult.Loaded);\n\n      if (didLoadNewFonts) {\n        measureClosestComponentContainer(layoutRef.current);\n      }\n    });\n  } // Hooks need to be above this line\n\n\n  if (!visible) return null;\n  injectComponentCSSRules();\n  const isHidden = isEditable && environment() === RenderTarget.canvas; // Add more styling and support vertical text alignment\n\n  const style = {\n    outline: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: convertVerticalAlignment(verticalAlignment),\n    opacity: isHidden ? 0 : opacity,\n    flexShrink: 0\n  };\n  const restrictedRenderTarget = RenderTarget.hasRestrictions();\n  const frame = calculateRect(props, parentSize || ParentSizeState.Unknown, false);\n  const isAutoSized = _usesDOMRect && (width === \"auto\" || height === \"auto\");\n  const hasTransformTemplate = !!props.transformTemplate || !frame || !restrictedRenderTarget || __fromCanvasComponent || isAutoSized;\n  const template = hasTransformTemplate ? props.transformTemplate ?? transformTemplate(center) : undefined;\n\n  if (!withExternalLayout) {\n    if (frame && restrictedRenderTarget && !isAutoSized) {\n      const rotate = Animatable.getNumber(rotation).toFixed(4);\n      style.transform = `translate(${frame.x}px, ${frame.y}px) rotate(${rotate}deg)`;\n      style.width = frame.width;\n      style.minWidth = frame.width;\n      style.height = frame.height;\n    } else {\n      style.left = left;\n      style.right = right;\n      style.top = top;\n      style.bottom = bottom;\n      style.width = width;\n      style.height = height; // I have no idea why this works as a number but not as a string. This is copied from the Text component.\n\n      style.rotate = rotation;\n    }\n\n    if (positionSticky) {\n      if (!isOnCanvas || inCodeComponent) {\n        style.position = \"sticky\";\n        style.willChange = \"transform\";\n        style.zIndex = 1;\n        style.top = positionStickyTop;\n        style.right = positionStickyRight;\n        style.bottom = positionStickyBottom;\n        style.left = positionStickyLeft;\n      }\n    }\n  }\n\n  collectFiltersFromProps(props, style);\n  collectTextShadowsForProps(props, style);\n\n  if (willChangeTransform) {\n    // We're not using Layer.applyWillChange here, because adding willChange:transform causes clipping issues in export\n    forceLayerBackingWithCSSProperties(style);\n  }\n\n  Object.assign(style, props.style);\n  return React.createElement(motion.div, {\n    id: id,\n    ref: layoutRef,\n    ...rest,\n    style: style,\n    layoutId: layoutId,\n    \"data-framer-name\": name,\n    \"data-framer-component-type\": \"RichText\",\n    \"data-center\": center,\n    className: cx(className, matchesCurrentRoute && \"current\"),\n    transformTemplate: template,\n    dangerouslySetInnerHTML: {\n      __html: innerHTML\n    }\n  });\n});\n\nfunction convertVerticalAlignment(verticalAlignment) {\n  switch (verticalAlignment) {\n    case \"top\":\n      return \"flex-start\";\n\n    case \"center\":\n      return \"center\";\n\n    case \"bottom\":\n      return \"flex-end\";\n  }\n}","map":{"version":3,"mappings":"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","names":["useRoutePreloader","useRouter","motion","React","useRef","fontStore","LoadFontResult","Animatable","cx","parseFramerPageLink","PathVariablesContext","replaceFramerPageLinks","useLinkMatchesRoute","useIsOnFramerCanvas","collectTextShadowsForProps","calculateRect","ParentSizeState","useParentSize","RenderTarget","collectFiltersFromProps","injectComponentCSSRules","forceLayerBackingWithCSSProperties","transformTemplate","useLayoutId","measureClosestComponentContainer","useMeasureLayout","isShallowEqualArray","ComponentContainerContext","findAnchorElementWithin","htmlEscapes","reUnescapedHtml","reHasUnescapedHtml","RegExp","source","escapeHTML","str","test","replace","chr","richTextPlaceholder","RichText","forwardRef","Text","props","forwardedRef","id","name","html","htmlFromDesign","text","textFromDesign","fonts","width","height","left","right","top","bottom","center","className","visible","opacity","rotation","verticalAlignment","isEditable","willChangeTransform","environment","current","withExternalLayout","positionSticky","positionStickyTop","positionStickyRight","positionStickyBottom","positionStickyLeft","__htmlStructure","__fromCanvasComponent","_forwardedOverrideId","_forwardedOverrides","_usesDOMRect","rest","parentSize","layoutId","fallbackLayoutRef","layoutRef","navigate","getRoute","currentRouteId","preload","inCodeComponent","useContext","matchesCurrentRoute","__link","isOnCanvas","textOrOverride","forwardedOverrideId","override","innerHTML","escapedText","pathVariables","useMemo","useEffect","container","interceptPageLinks","event","anchorElement","target","metaKey","pageLink","getAttribute","preventDefault","elementId","undefined","href","link","element","addEventListener","removeEventListener","prevFontsRef","loadWebFontsFromSelectors","then","results","canvas","didLoadNewFonts","some","result","status","value","Loaded","isHidden","style","outline","display","flexDirection","justifyContent","convertVerticalAlignment","flexShrink","restrictedRenderTarget","hasRestrictions","frame","Unknown","isAutoSized","hasTransformTemplate","template","rotate","getNumber","toFixed","transform","x","y","minWidth","position","willChange","zIndex","Object","assign","div","ref","dangerouslySetInnerHTML","__html"],"sources":["../../../src/render/presentation/RichText.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}